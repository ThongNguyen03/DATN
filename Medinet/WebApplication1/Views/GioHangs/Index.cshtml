@model WebApplication1.Controllers.GioHangViewModel
@{
    ViewBag.Title = "Giỏ hàng của tôi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Custom styles for shopping cart - Medinet */
    .card {
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        border: none;
    }

    .voucher-toggle {
        cursor: pointer;
        font-size: 14px;
    }

        .voucher-toggle:hover {
            text-decoration: underline;
        }

    .cart-item {
        padding: 12px 0;
    }

    .cart-item-image img {
        object-fit: contain;
        border-radius: 8px;
    }

    .btn-primary {
        background-color: #1e88e5;
        border-color: #1e88e5;
        padding: 10px 16px;
        font-weight: 500;
    }

    .form-check-input:checked {
        background-color: #1e88e5;
        border-color: #1e88e5;
    }

    .delete-item, .decrease-qty, .increase-qty {
        border-color: #e0e0e0;
        color: #616161;
    }

    .item-qty {
        border-left: none;
        border-right: none;
    }

    .address-section {
        background-color: #f5f5f5;
        padding: 12px;
        border-radius: 8px;
    }

    .edit-address {
        text-decoration: none;
    }

    .payment-methods {
        margin-top: 15px;
        border-top: 1px solid #eee;
        padding-top: 15px;
    }

    .payment-method {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.2s;
    }

        .payment-method:hover {
            border-color: #1e88e5;
            background-color: #f5f9ff;
        }

        .payment-method.selected {
            border-color: #1e88e5;
            background-color: #e3f2fd;
        }

    .payment-method-icon {
        width: 40px;
        margin-right: 10px;
    }

    .phone-number-section {
        margin-top: 15px;
    }
</style>
<div class="container mt-4">
    <div class="row">
        <!-- Left side - Cart items -->
        <div class="col-md-8">
            <div class="card mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input select-all" id="selectAll">
                                <label class="form-check-label fw-bold" for="selectAll">Tất cả</label>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-secondary btn-sm delete-selected" disabled>
                            <i class="fa fa-trash"></i> Xóa
                        </button>
                    </div>
                </div>
            </div>

            @if (Model.ShopGroups.Count == 0)
            {
                <div class="card mb-3">
                    <div class="card-body text-center">
                        <p>Giỏ hàng của bạn đang trống.</p>
                        <a href="@Url.Action("Index", "Home")" class="btn btn-primary">Tiếp tục mua sắm</a>
                    </div>
                </div>
            }
            else
            {
                foreach (var shopGroup in Model.ShopGroups)
                {
                    <div class="card mb-3 shop-group">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input select-shop" data-shop="@shopGroup.TenCuaHang">
                                    <label class="form-check-label fw-bold">@shopGroup.TenCuaHang</label>
                                </div>
                            </div>

                            @foreach (var item in shopGroup.Items)
                            {
                                <div class="cart-item d-flex align-items-center py-2 border-top">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input select-item"
                                               data-id="@item.MaGioHang"
                                               data-shop="@shopGroup.TenCuaHang"
                                               value="@item.ThanhTien">
                                    </div>
                                    <div class="cart-item-image mx-3">
                                        <img src="@Url.Content(item.AnhSanPham)" alt="@item.TenSanPham" class="img-thumbnail" style="width: 80px; height: 80px;">
                                    </div>
                                    <div class="cart-item-details flex-grow-1">
                                        <h6 class="mb-1">@item.TenSanPham</h6>
                                        <div class="d-flex justify-content-between align-items-center mt-2">
                                            <div class="quantity-controls">
                                                <div class="input-group" style="width: 120px;">
                                                    <button type="button" class="btn btn-outline-secondary decrease-qty" data-id="@item.MaGioHang">-</button>
                                                    <input type="text" class="form-control text-center item-qty" value="@item.SoLuong" data-id="@item.MaGioHang">
                                                    <button type="button" class="btn btn-outline-secondary increase-qty" data-id="@item.MaGioHang">+</button>
                                                </div>
                                            </div>
                                            <div class="price-and-actions d-flex align-items-center">
                                                <div class="price me-3">
                                                    <span class="fw-bold">@string.Format("{0:N0}", item.ThanhTien)</span>
                                                </div>
                                                <button type="button" class="btn btn-outline-secondary delete-item" data-id="@item.MaGioHang">
                                                    <i class="fa fa-trash"></i> Xóa
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        </div>

        <!-- Right side - Order summary -->
        <div class="col-md-4">
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">Địa Chỉ Giao Hàng</h5>
                    <div class="address-section mb-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <i class="fa fa-map-marker-alt me-2"></i>
                                <span>@Model.DiaChi</span>
                            </div>
                            <a href="#" class="text-primary edit-address" data-bs-toggle="modal" data-bs-target="#addressModal">
                                <i class="fa fa-edit"></i>
                            </a>
                        </div>
                    </div>
                    <div class="phone-number-section">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <i class="fa fa-phone me-2"></i>
                                <span>@Model.SoDienThoai</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Tổng Tiền Hàng:</span>
                        <span class="fw-bold" id="selected-subtotal">0</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Tổng Tiền Chi Phí Vận Chuyển:</span>
                        <span class="fw-bold" id="shipping-fee">30,000</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Giảm Giá Chi Phí Vận Chuyển:</span>
                        <span class="fw-bold text-danger" id="shipping-discount">-30,000</span>
                    </div>
                    @if (Model.GiamGiaVoucher > 0)
                    {
                        <div class="d-flex justify-content-between mb-2">
                            <span>Giảm Giá Voucher:</span>
                            <span class="fw-bold text-danger" id="voucher-discount">-@string.Format("{0:N0}", Model.GiamGiaVoucher)</span>
                        </div>
                    }
                    <hr>
                    <div class="d-flex justify-content-between mb-3">
                        <span class="fw-bold">Tổng Thanh Toán:</span>
                        <span class="fw-bold fs-5 text-danger" id="selected-total">0</span>
                    </div>

                    <!-- Phương thức thanh toán -->
                    <!--<div class="payment-methods">
                            <h6 class="mb-3">Phương thức thanh toán</h6>
                            <div class="payment-method selected" data-method="COD">
                                <input type="radio" name="payment-method" id="payment-cod" checked class="me-2">
                                <label for="payment-cod" class="mb-0 w-100">Thanh toán khi nhận hàng (COD)</label>
                            </div>
                            <div class="payment-method" data-method="VNPAY">
                                <input type="radio" name="payment-method" id="payment-vnpay" class="me-2">
                                <img src="~/Content/images/vnpay-logo.png" alt="VNPAY" class="payment-method-icon">
                                <label for="payment-vnpay" class="mb-0">Thanh toán qua VNPAY</label>
                            </div>
                        </div>-->
                                        @*<form method="post" action="@Url.Action("TienHanhThanhToan", "GioHangs")" id="checkout-form">
                                <input type="hidden" name="selectedItems" id="selected-items-input" value="" />
                                <input type="hidden" name="paymentMethod" id="payment-method-input" value="COD" />
                                <button type="submit" id="checkout-button" class="btn btn-primary w-100 mt-3 disabled">
                                    Đặt Hàng
                                </button>
                            </form>*@

                    <!-- Sửa phần form trong trang giỏ hàng -->
                    <form method="post" action="@Url.Action("Index", "ThanhToan")" id="checkout-form">
                        <input type="hidden" name="selectedItems" id="selected-items-input" value="" />
                        <button type="submit" id="checkout-button" class="btn btn-primary w-100 mt-3 disabled">
                            Đặt Hàng
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Địa chỉ -->
<div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Cập nhật địa chỉ giao hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addressForm">
                    <div class="mb-3">
                        <label for="soDienThoai" class="form-label">Số điện thoại</label>
                        <input type="text" class="form-control" id="soDienThoai" name="soDienThoai" value="@(Model.SoDienThoai == "Chưa có số điện thoại" ? "" : Model.SoDienThoai)" required>
                        <div class="form-text">Vui lòng nhập số điện thoại 10 số</div>
                    </div>
                    <div class="mb-3">
                        <label for="diaChi" class="form-label">Địa chỉ nhận hàng</label>
                        <textarea class="form-control" id="diaChi" name="diaChi" rows="3" required>@(Model.DiaChi == "Chưa có địa chỉ" ? "" : Model.DiaChi)</textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveAddressBtn">Lưu địa chỉ</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
            $(document).ready(function () {
                // Tính toán tổng tiền của các sản phẩm được chọn
                function calculateSelectedTotal() {
                    var subtotal = 0;

                    // Tính tổng tiền từ các sản phẩm được chọn
                    $('.select-item:checked').each(function() {
                        // Lấy giá từ value của checkbox thay vì data-price
                        var price = parseInt($(this).val()) || 0;
                        subtotal += price;
                    });

                    // Giá trị cố định
                    var shippingFee = 30000;
                    var shippingDiscount = -30000;
                    var voucherDiscount = @Model.GiamGiaVoucher;

                    // Chỉ áp dụng phí vận chuyển nếu có sản phẩm được chọn
                    var total = subtotal;
                    if (subtotal > 0) {
                        total = subtotal + shippingFee + shippingDiscount - voucherDiscount;
                    }

                    // Hiển thị giá trị đã tính toán
                    $('#selected-subtotal').text(formatCurrency(subtotal));
                    $('#selected-total').text(formatCurrency(total));

                    // Cập nhật danh sách sản phẩm đã chọn để gửi lên server
                    var selectedIds = [];
                    $('.select-item:checked').each(function() {
                        selectedIds.push($(this).data('id'));
                    });
                    $('#selected-items-input').val(selectedIds.join(','));

                    // Cập nhật trạng thái nút đặt hàng
                    $('#checkout-button').toggleClass('disabled', selectedIds.length === 0);
                }

                // Định dạng số tiền theo format VND
                function formatCurrency(amount) {
                    return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }

                // Khởi tạo tính toán tổng tiền ban đầu
                calculateSelectedTotal();

                // Chọn tất cả
                $('#selectAll').change(function () {
                    $('.select-shop, .select-item').prop('checked', $(this).prop('checked'));
                    updateDeleteButtonState();
                    calculateSelectedTotal();
                });

                // Chọn theo shop
                $('.select-shop').change(function () {
                    var shop = $(this).data('shop');
                    $('.select-item[data-shop="' + shop + '"]').prop('checked', $(this).prop('checked'));
                    updateSelectAllState();
                    updateDeleteButtonState();
                    calculateSelectedTotal();
                });

                // Chọn từng item
                $('.select-item').change(function () {
                    var shop = $(this).data('shop');

                    // Kiểm tra nếu tất cả item của shop đều được chọn
                    var allChecked = $('.select-item[data-shop="' + shop + '"]').length ===
                                     $('.select-item[data-shop="' + shop + '"]:checked').length;

                    $('.select-shop[data-shop="' + shop + '"]').prop('checked', allChecked);

                    updateSelectAllState();
                    updateDeleteButtonState();
                    calculateSelectedTotal();
                });

                // Cập nhật trạng thái nút chọn tất cả
                function updateSelectAllState() {
                    $('#selectAll').prop('checked',
                        $('.select-item').length > 0 &&
                        $('.select-item').length === $('.select-item:checked').length
                    );
                }

                // Cập nhật trạng thái nút xóa
                function updateDeleteButtonState() {
                    var hasSelectedItems = $('.select-item:checked').length > 0;
                    $('.delete-selected').prop('disabled', !hasSelectedItems);
                }

                // Tăng số lượng
                $('.increase-qty').click(function () {
                    var id = $(this).data('id');
                    var input = $('.item-qty[data-id="' + id + '"]');
                    var currentVal = parseInt(input.val());

                    if (!isNaN(currentVal)) {
                        input.val(currentVal + 1);
                        updateQuantity(id, currentVal + 1);
                    }
                });

                // Giảm số lượng
                $('.decrease-qty').click(function () {
                    var id = $(this).data('id');
                    var input = $('.item-qty[data-id="' + id + '"]');
                    var currentVal = parseInt(input.val());

                    if (!isNaN(currentVal) && currentVal > 1) {
                        input.val(currentVal - 1);
                        updateQuantity(id, currentVal - 1);
                    }
                });

                // Cập nhật số lượng khi thay đổi trực tiếp giá trị input
                $('.item-qty').change(function () {
                    var id = $(this).data('id');
                    var newVal = parseInt($(this).val());

                    if (isNaN(newVal) || newVal < 1) {
                        $(this).val(1);
                        newVal = 1;
                    }

                    updateQuantity(id, newVal);
                });

                // Gọi API cập nhật số lượng
                function updateQuantity(id, quantity) {
                    $.ajax({
                        url: '@Url.Action("CapNhatSoLuong", "GioHangs")',
                        type: 'POST',
                        data: { maGioHang: id, soLuong: quantity },
                        success: function (response) {
                            if (response.success) {
                                // Cập nhật giá hiển thị cho item
                                var itemRow = $('.select-item[data-id="' + id + '"]').closest('.cart-item');
                                itemRow.find('.price .fw-bold').text(response.thanhTien);

                                // Cập nhật value của checkbox - QUAN TRỌNG!
                                var newPrice = parseInt(response.thanhTien.replace(/,/g, ''));
                                $('.select-item[data-id="' + id + '"]').val(newPrice);

                                // Tính lại tổng tiền nếu item đang được chọn
                                calculateSelectedTotal();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('Đã xảy ra lỗi, vui lòng thử lại sau.');
                        }
                    });
                }

                // Xóa một sản phẩm
                $('.delete-item').click(function () {
                    var id = $(this).data('id');
                    if (confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                        $.ajax({
                            url: '@Url.Action("XoaSanPham", "GioHangs")',
                            type: 'POST',
                            data: { maGioHang: id },
                            success: function (response) {
                                if (response.success) {
                                    location.reload();
                                }
                            }
                        });
                    }
                });

                // Xóa nhiều sản phẩm đã chọn
                $('.delete-selected').click(function () {
                    var selectedItems = $('.select-item:checked');

                    if (selectedItems.length > 0 && confirm('Bạn có chắc muốn xóa các sản phẩm đã chọn?')) {
                        var ids = [];
                        selectedItems.each(function () {
                            ids.push($(this).data('id'));
                        });

                        $.ajax({
                            url: '@Url.Action("XoaNhieu", "GioHangs")',
                            type: 'POST',
                            data: { maGioHangs: ids },
                            traditional: true,
                            success: function (response) {
                                if (response.success) {
                                    location.reload();
                                }
                            }
                        });
                    }
                });

                // Xử lý voucher
                $('.apply-voucher').click(function () {
                    var shop = $(this).data('shop');
                    var voucher = $(this).prev('.voucher-input').val();

                    if (voucher.trim() !== '') {
                        $.ajax({
                            url: '@Url.Action("ApDungVoucher", "GioHangs")',
                            type: 'POST',
                            data: { maVoucher: voucher },
                            success: function (response) {
                                if (response.success) {
                                    alert(response.message);
                                    location.reload();
                                } else {
                                    alert(response.message);
                                }
                            }
                        });
                    } else {
                        alert('Vui lòng nhập mã voucher!');
                    }
                });

                // Xử lý lưu địa chỉ
                $('#saveAddressBtn').click(function() {
                    var diaChi = $('#diaChi').val();
                    var soDienThoai = $('#soDienThoai').val();

                    // Kiểm tra dữ liệu
                    if (!diaChi) {
                        alert('Vui lòng nhập địa chỉ!');
                        return;
                    }

                    if (!soDienThoai || !/^[0-9]{10}$/.test(soDienThoai)) {
                        alert('Vui lòng nhập số điện thoại hợp lệ (10 số)!');
                        return;
                    }

                    // Gọi API cập nhật địa chỉ
                    $.ajax({
                        url: '@Url.Action("CapNhatDiaChi", "GioHangs")',
                        type: 'POST',
                        data: {
                            diaChi: diaChi,
                            soDienThoai: soDienThoai
                        },
                        success: function(response) {
                            if (response.success) {
                                // Cập nhật thông tin địa chỉ trên giao diện
                                $('.address-section span').text(response.diaChi);
                                $('.phone-number-section span').text(response.soDienThoai);

                                // Đóng popup
                                $('#addressModal').modal('hide');

                                // Hiển thị thông báo thành công
                                alert(response.message);
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function() {
                            alert('Đã xảy ra lỗi khi cập nhật địa chỉ. Vui lòng thử lại sau!');
                        }
                    });
                });

                //// Xử lý chọn phương thức thanh toán
                //$('.payment-method').click(function() {
                //    // Bỏ chọn tất cả
                //    $('.payment-method').removeClass('selected');
                //    $('.payment-method input[type="radio"]').prop('checked', false);

                //    // Chọn phương thức được click
                //    $(this).addClass('selected');
                //    $(this).find('input[type="radio"]').prop('checked', true);

                //    // Cập nhật hidden input với phương thức thanh toán
                //    var method = $(this).data('method');
                //    $('#payment-method-input').val(method);

                //    // Cập nhật text của nút đặt hàng
                //    if (method === 'VNPAY') {
                //        $('#checkout-button').text('Tiếp tục với VNPAY');
                //    } else {
                //        $('#checkout-button').text('Đặt Hàng');
                //    }
                //});

                // Xử lý form thanh toán
                $('#checkout-form').submit(function(e) {
                    var selectedItems = $('#selected-items-input').val();
                    var diaChi = $('.address-section span').text();
                    var soDienThoai = $('.phone-number-section span').text();

                    if (!selectedItems) {
                        e.preventDefault();
                        alert('Vui lòng chọn ít nhất một sản phẩm để thanh toán!');
                        return;
                    }

                    if (diaChi === 'Chưa có địa chỉ') {
                        e.preventDefault();
                        alert('Vui lòng cập nhật địa chỉ giao hàng trước khi đặt hàng!');
                        $('#addressModal').modal('show');
                        return;
                    }

                    if (soDienThoai === 'Chưa có số điện thoại') {
                        e.preventDefault();
                        alert('Vui lòng cập nhật số điện thoại trước khi đặt hàng!');
                        $('#addressModal').modal('show');
                        return;
                    }

                    //// Thêm phương thức thanh toán vào form
                    //var paymentMethod = $('#payment-method-input').val();
                    //$(this).append('<input type="hidden" name="paymentMethod" value="' + paymentMethod + '">');

                    // Hiển thị loading
                    $('#checkout-button').html('<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');
                    $('#checkout-button').prop('disabled', true);
                });
            });
    </script>
}