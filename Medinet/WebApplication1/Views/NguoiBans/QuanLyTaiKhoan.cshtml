@using System.Linq;
@model WebApplication1.Models.NguoiBan
@{
    ViewBag.Title = "Quản lý doanh thu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Custom styles for tabs and sidebar */
    .seller-sidebar {
        background-color: #ffffff; /* White background for seller sidebar */
        border: 1px solid #e9ecef;
    }

        .seller-sidebar .card-header {
            background-color: #f8f9fa; /* Light gray header */
            color: #212529; /* Dark text */
            border-bottom: 1px solid #e9ecef;
        }

        .seller-sidebar .list-group-item {
            background-color: transparent;
            color: #212529; /* Dark text */
            border-color: #e9ecef;
        }

            .seller-sidebar .list-group-item:hover {
                background-color: #f8f9fa;
            }

            .seller-sidebar .list-group-item.active {
                background-color: #007bff;
                border-color: #007bff;
                color: #ffffff; /* White text for active item */
            }

    /* Card styling */
    .stats-card {
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s;
        height: 100%;
    }

        .stats-card:hover {
            transform: translateY(-5px);
        }

    .stats-icon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        margin-bottom: 15px;
    }

    .stats-title {
        color: #6c757d;
        font-size: 14px;
        margin-bottom: 5px;
    }

    .stats-value {
        font-size: 24px;
        font-weight: 700;
        margin-bottom: 0;
    }

    /* Order status cards */
    .order-status-card {
        border-radius: 8px;
        border-top: 3px solid;
        transition: transform 0.3s;
    }

        .order-status-card:hover {
            transform: translateY(-5px);
        }

    .delivered {
        border-top-color: #28a745;
    }

    .shipped {
        border-top-color: #17a2b8;
    }

    .processing {
        border-top-color: #ffc107;
    }

    .cancelled {
        border-top-color: #dc3545;
    }

    .order-status-value {
        font-size: 22px;
        font-weight: 700;
    }

    .order-status-title {
        font-size: 14px;
        color: #6c757d;
    }

    /* Chart container */
    .chart-container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 15px;
        margin-bottom: 20px;
    }

    /* Transaction history table */
    .transaction-table th {
        background-color: #f8f9fa;
        font-weight: 600;
    }

    .transaction-table td, .transaction-table th {
        vertical-align: middle;
    }

    .badge-deposit {
        background-color: #28a745;
        color: white;
    }

    .badge-withdrawal {
        background-color: #dc3545;
        color: white;
    }

    .badge-escrow {
        background-color: #17a2b8;
        color: white;
    }

    .badge-platform-fee {
        background-color: #6c757d;
        color: white;
    }

    .badge-refund {
        background-color: #ffc107;
        color: #212529;
    }

    .badge-payment {
        background-color: #007bff;
        color: white;
    }

    /* Product sales table */
    .product-table img {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 4px;
    }

    /* Wallet card */
    .wallet-card {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .wallet-balance {
        font-size: 28px;
        font-weight: 700;
        color: #28a745;
    }

    .wallet-button {
        border-radius: 50px;
        padding: 8px 20px;
        font-weight: 500;
    }

    /* Modal styling */
    .modal-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
    }

    .modal-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #e9ecef;
    }

    /* Deposit info card */
    .deposit-info-card {
        background-color: #f8f9fa;
        border-left: 4px solid #17a2b8;
    }
</style>

<div class="container mt-4">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3">
            <div class="card seller-sidebar">
                <div class="card-header text-black">
                    <h5 class="mb-0">Trang người bán</h5>
                </div>
                <div class="list-group list-group-flush">
                    <a href="@Url.Action("EditSellerProfile", "NguoiDungs")" class="list-group-item list-group-item-action">
                        <i class="fas fa-store mr-2"></i> Thông tin cửa hàng
                    </a>
                    <a href="@Url.Action("QuanLySanPham", "NguoiBans", new { id = Model.MaNguoiBan })" class="list-group-item list-group-item-action">
                        <i class="fas fa-box mr-2"></i> Sản phẩm
                    </a>
                    <a href="@Url.Action("DonHangNguoiMua", "DonHang")" class="list-group-item list-group-item-action">
                        <i class="fas fa-shopping-cart mr-2"></i> Đơn hàng
                    </a>
                    <a href="@Url.Action("GiaoDichNguoiBan", "GiaoDich")" class="list-group-item list-group-item-action">
                        <i class="fas fa-exchange-alt mr-2"></i> Lịch sử giao dịch
                    </a>
                    <a href="@Url.Action("ViNguoiBan", "GiaoDich")" class="list-group-item list-group-item-action">
                        <i class="fas fa-wallet mr-2"></i> Ví của tôi
                    </a>
                    <a href="@Url.Action("QuanLyDanhGia", "NguoiBans", new { id = Model.MaNguoiBan })" class="list-group-item list-group-item-action ">
                        <i class="fas fa-star mr-2"></i> Đánh giá
                    </a>
                    <a href="@Url.Action("QuanLyTaiKhoan", "NguoiBans", new { id = Model.MaNguoiBan })" class="list-group-item list-group-item-action active">
                        <i class="fas fa-chart-line mr-2"></i> Thống kê
                    </a>
                    <a href="@Url.Action("DangXuat", "DangNhap")" class="list-group-item list-group-item-action text-danger">
                        <i class="fas fa-sign-out-alt mr-2"></i> Đăng xuất
                    </a>
                </div>
            </div>
        </div>

        <!-- Main content -->
        <div class="col-md-9">
            <div class="row mb-4">
                <!-- Ví điện tử -->
                <div class="col-md-5">
                    <div class="card wallet-card p-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h5 class="card-title mb-0">Ví điện tử</h5>
                            <i class="fas fa-wallet fa-2x text-primary"></i>
                        </div>
                        <div class="wallet-balance mb-3">@String.Format("{0:N0} VNĐ", Model.SoDuVi)</div>
                        <p class="text-muted mb-3">Cập nhật: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</p>

                        <div class="deposit-info-card p-3 mb-3">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-info-circle text-info mr-2"></i>
                                <div>
                                    <p class="mb-1"><strong>Thông tin kí quỹ</strong></p>
                                    <p class="mb-1 small">- Tỷ lệ đặt cọc cho đơn hàng COD: @ViewBag.TyLeDatCoc%</p>
                                    <p class="mb-1 small">- Phí nền tảng: @ViewBag.TyLePhiNenTang%</p>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-primary wallet-button" data-toggle="modal" data-target="#depositModal">
                                <i class="fas fa-plus-circle mr-1"></i> Nạp tiền
                            </button>
                            <button type="button" class="btn btn-outline-secondary wallet-button" data-toggle="modal" data-target="#withdrawModal">
                                <i class="fas fa-money-bill-wave mr-1"></i> Rút tiền
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Tóm tắt doanh thu -->
                <div class="col-md-7">
                    <div class="row">
                        <!-- Lợi nhuận -->
                        <div class="col-md-6 mb-3">
                            <div class="card stats-card bg-white p-3">
                                <div class="stats-icon bg-danger-soft text-danger">
                                    <i class="fas fa-chart-line"></i>
                                </div>
                                <div class="stats-title">Lợi nhuận</div>
                                <div class="stats-value text-danger">@String.Format("{0:N0} đ", ViewBag.TongLoiNhuan)</div>
                            </div>
                        </div>

                        <!-- Tổng doanh thu -->
                        <div class="col-md-6 mb-3">
                            <div class="card stats-card bg-white p-3">
                                <div class="stats-icon bg-primary-soft text-primary">
                                    <i class="fas fa-money-bill-wave"></i>
                                </div>
                                <div class="stats-title">Tổng doanh thu</div>
                                <div class="stats-value text-primary">@String.Format("{0:N0} đ", ViewBag.TongDoanhThu)</div>
                            </div>
                        </div>

                        <!-- Tổng đơn hàng -->
                        <div class="col-md-6 mb-3">
                            <div class="card stats-card bg-white p-3">
                                <div class="stats-icon bg-success-soft text-success">
                                    <i class="fas fa-shopping-cart"></i>
                                </div>
                                <div class="stats-title">Tổng đơn hàng</div>
                                <div class="stats-value text-success">@ViewBag.TongDonHang</div>
                            </div>
                        </div>

                        <!-- Số lượng sản phẩm -->
                        <div class="col-md-6 mb-3">
                            <div class="card stats-card bg-white p-3">
                                <div class="stats-icon bg-warning-soft text-warning">
                                    <i class="fas fa-box"></i>
                                </div>
                                <div class="stats-title">Số lượng sản phẩm</div>
                                <div class="stats-value text-warning">@ViewBag.TongSanPham</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- PHẦN 2: Tổng số đơn hàng theo trạng thái - Tách riêng biệt -->
            <div class="row mb-4">
                <div class="col-12">
                    <h5 class="mb-3">Tổng số đơn hàng</h5>
                </div>

                <!-- Đã giao -->
                <div class="col-md-3 mb-3">
                    <div class="card order-status-card delivered p-3">
                        <div class="order-status-value">@ViewBag.DonHangDaGiao</div>
                        <div class="order-status-title">Đã giao</div>
                    </div>
                </div>

                <!-- Đã vận chuyển -->
                <div class="col-md-3 mb-3">
                    <div class="card order-status-card shipped p-3">
                        <div class="order-status-value">@ViewBag.DonHangDangVanChuyen</div>
                        <div class="order-status-title">Đã vận chuyển</div>
                    </div>
                </div>

                <!-- Đang chờ xử lý -->
                <div class="col-md-3 mb-3">
                    <div class="card order-status-card processing p-3">
                        <div class="order-status-value">@ViewBag.DonHangChoXuLy</div>
                        <div class="order-status-title">Đang chờ xử lý</div>
                    </div>
                </div>

                <!-- Đã hủy -->
                <div class="col-md-3 mb-3">
                    <div class="card order-status-card cancelled p-3">
                        <div class="order-status-value">@ViewBag.DonHangDaHuy</div>
                        <div class="order-status-title">Đã hủy</div>
                    </div>
                </div>
            </div>

            <!-- Biểu đồ doanh thu -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="chart-container">
                        <h5 class="mb-4">Biểu đồ doanh thu</h5>
                        <div style="height: 250px;">
                            <canvas id="revenueChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lịch sử giao dịch và Sản phẩm bán chạy -->
            <div class="row">
                <!-- Lịch sử giao dịch -->
                <div class="col-md-6 mb-4">

                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Lịch sử giao dịch ví</h5>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover transaction-table mb-0">
                                    <thead>
                                        <tr>
                                            <th>Ngày</th>
                                            <th>Loại</th>
                                            <th>Số tiền</th>
                                        </tr>
                                    </thead>
                                    <tbody id="giaoDichTable">
                                        @{
                                            var cacGiaoDich = ViewBag.GhiChepVis;
                                            var soLuongHienThi = 5;
                                            var count = 0;
                                        }
                                        @foreach (var giaoDich in ViewBag.GhiChepVis)
                                        {
                                            if (count < soLuongHienThi)
                                            {
                                                <tr>
                                                    <td>@giaoDich.NgayGiaoDich.ToString("dd/MM/yyyy")</td>
                                                    <td>
                                                        @if (giaoDich.LoaiGiaoDich == "Nạp tiền ví")
                                                        {
                                                            <span class="badge badge-deposit">Nạp tiền</span>
                                                        }
                                                        else if (giaoDich.LoaiGiaoDich == "Rút tiền")
                                                        {
                                                            <span class="badge badge-withdrawal">Rút tiền</span>
                                                        }
                                                        else if (giaoDich.LoaiGiaoDich == "Đặt cọc")
                                                        {
                                                            <span class="badge badge-escrow">Đặt cọc</span>
                                                        }
                                                        else if (giaoDich.LoaiGiaoDich == "Phí nền tảng")
                                                        {
                                                            <span class="badge badge-platform-fee">Phí nền tảng</span>
                                                        }
                                                        else if (giaoDich.LoaiGiaoDich == "Hoàn trả đặt cọc" || giaoDich.LoaiGiaoDich == "Hoàn trả phí nền tảng")
                                                        {
                                                            <span class="badge badge-refund">Hoàn trả</span>
                                                        }
                                                        else if (giaoDich.LoaiGiaoDich == "Thanh toán đơn hàng")
                                                        {
                                                            <span class="badge badge-payment">Thanh toán</span>
                                                        }
                                                        else if (giaoDich.LoaiGiaoDich == "Hoàn tiền rút")
                                                        {
                                                            <span class="badge badge-deposit">Hoàn tiền rút</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge badge-secondary">@giaoDich.LoaiGiaoDich</span>
                                                        }
                                                    </td>
                                                    <td class="@(giaoDich.SoTien > 0 ? "text-success" : "text-danger")">
                                                        @(giaoDich.SoTien > 0 ? "+" : "")@String.Format("{0:N0} đ", giaoDich.SoTien)
                                                    </td>
                                                </tr>
                                                count++;
                                            }
                                        }
                                    </tbody>
                                    <tbody id="tatCaGiaoDich" style="display:none;">
                                        @foreach (var giaoDich in ViewBag.GhiChepVis)
                                        {
                                            <tr>
                                                <td>@giaoDich.NgayGiaoDich.ToString("dd/MM/yyyy")</td>
                                                <td>
                                                    @if (giaoDich.LoaiGiaoDich == "Nạp tiền ví")
                                                    {
                                                        <span class="badge badge-deposit">Nạp tiền</span>
                                                    }
                                                    else if (giaoDich.LoaiGiaoDich == "Rút tiền")
                                                    {
                                                        <span class="badge badge-withdrawal">Rút tiền</span>
                                                    }
                                                    else if (giaoDich.LoaiGiaoDich == "Đặt cọc")
                                                    {
                                                        <span class="badge badge-escrow">Đặt cọc</span>
                                                    }
                                                    else if (giaoDich.LoaiGiaoDich == "Phí nền tảng")
                                                    {
                                                        <span class="badge badge-platform-fee">Phí nền tảng</span>
                                                    }
                                                    else if (giaoDich.LoaiGiaoDich == "Hoàn trả đặt cọc" || giaoDich.LoaiGiaoDich == "Hoàn trả phí nền tảng")
                                                    {
                                                        <span class="badge badge-refund">Hoàn trả</span>
                                                    }
                                                    else if (giaoDich.LoaiGiaoDich == "Thanh toán đơn hàng")
                                                    {
                                                        <span class="badge badge-payment">Thanh toán</span>
                                                    }
                                                    else if (giaoDich.LoaiGiaoDich == "Hoàn tiền rút")
                                                    {
                                                        <span class="badge badge-deposit">Hoàn tiền rút</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-secondary">@giaoDich.LoaiGiaoDich</span>
                                                    }
                                                </td>
                                                <td class="@(giaoDich.SoTien > 0 ? "text-success" : "text-danger")">
                                                    @(giaoDich.SoTien > 0 ? "+" : "")@String.Format("{0:N0} đ", giaoDich.SoTien)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer text-center">
                                @*<button class="btn btn-link" id="xemTatCaBtn" type="button">Xem tất cả giao dịch</button>
                                 <button class="btn btn-link" id="anBotBtn" style="display:none;" type="button">Thu gọn</button>*@
                                <a href="@Url.Action("ViNguoiBan", "GiaoDich")">
                                    Xem tất cả giao dịch
                                </a>
                            </div>
                        </div>
                    </div>

                </div>

                <!-- Sản phẩm bán chạy -->
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Sản phẩm bán chạy nhất</h5>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover product-table mb-0">
                                    <thead>
                                        <tr>
                                            <th>Sản phẩm</th>
                                            <th>Số lượng bán</th>
                                            <th>Tổng tiền</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var sanPham in ViewBag.SanPhamBanChay)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <img src="@sanPham.AnhDaiDien" alt="@sanPham.TenSanPham" class="mr-2">
                                                        <span>@sanPham.TenSanPham</span>
                                                    </div>
                                                </td>
                                                <td>@sanPham.SoLuongBan</td>
                                                <td>@String.Format("{0:N0} đ", sanPham.TongTien)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="card-footer text-center">
                                <a href="@Url.Action("QuanLySanPham", "NguoiBans", new { id = Model.MaNguoiBan })" class="btn btn-link">Xem tất cả sản phẩm</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Nạp tiền -->
<!-- Modal Nạp tiền cải tiến -->
<div class="modal fade" id="depositModal" tabindex="-1" role="dialog" aria-labelledby="depositModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="depositModalLabel">Nạp tiền vào ví</h5>
                <button type="button" class="close text-black" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form action="@Url.Action("NapTienVi", "NguoiBans")" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="maNguoiBan" value="@Model.MaNguoiBan" />
                <div class="modal-body">
                    <div class="alert alert-info mb-3">
                        <i class="fas fa-info-circle mr-1"></i> Số dư hiện tại: <strong>@String.Format("{0:N0} VNĐ", Model.SoDuVi)</strong>
                    </div>
                    <div class="form-group">
                        <label for="soTien">Số tiền muốn nạp</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="soTien" name="soTien" min="10000" required>
                            <div class="input-group-append">
                                <span class="input-group-text">VNĐ</span>
                            </div>
                        </div>
                        <small class="form-text text-muted">Số tiền tối thiểu là 10,000 VNĐ</small>
                    </div>
                    <div class="form-group">
                        <label for="phuongThucThanhToan">Phương thức thanh toán</label>
                        <select class="form-control" id="phuongThucThanhToan" name="phuongThucThanhToan" required>
                            <option value="VNPAY">VNPAY</option>
                            <option value="Chuyển khoản">Chuyển khoản ngân hàng</option>
                            <option value="Momo">Ví Momo</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-check mr-1"></i> Tiếp tục thanh toán
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Rút tiền -->
<div class="modal fade" id="withdrawModal" tabindex="-1" role="dialog" aria-labelledby="withdrawModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="withdrawModalLabel">Rút tiền từ ví</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form action="@Url.Action("RutTienVi", "NguoiBans")" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="maNguoiBan" value="@Model.MaNguoiBan" />
                <input type="hidden" name="thongTinTaiKhoan" id="fullAccountInfo" />
                <div class="modal-body">
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle mr-1"></i> Số dư khả dụng: <strong>@String.Format("{0:N0} VNĐ", Model.SoDuVi)</strong>
                    </div>
                    <div class="form-group">
                        <label for="soTienRut">Số tiền rút</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="soTienRut" name="soTien" min="50000" max="@Model.SoDuVi" required>
                            <div class="input-group-append">
                                <span class="input-group-text">VNĐ</span>
                            </div>
                        </div>
                        <small class="form-text text-muted">Số tiền tối thiểu là 50,000 VNĐ</small>
                    </div>
                    <div class="form-group">
                        <label for="tenNganHang">Tên ngân hàng</label>
                        <select class="form-control account-info" id="tenNganHang" required>
                            <option value="">-- Chọn ngân hàng --</option>
                            <option value="Ngân hàng TMCP Á Châu (ACB)">Ngân hàng TMCP Á Châu (ACB)</option>
                            <option value="Ngân hàng TMCP Bắc Á (BacABank)">Ngân hàng TMCP Bắc Á (BacABank)</option>
                            <option value="Ngân hàng TMCP Bảo Việt (BaoVietBank)">Ngân hàng TMCP Bảo Việt (BaoVietBank)</option>
                            <option value="Ngân hàng TMCP Đầu tư và Phát triển Việt Nam (BIDV)">Ngân hàng TMCP Đầu tư và Phát triển Việt Nam (BIDV)</option>
                            <option value="Ngân hàng TMCP Hàng Hải (MSB)">Ngân hàng TMCP Hàng Hải (MSB)</option>
                            <option value="Ngân hàng TMCP Quân Đội (MB)">Ngân hàng TMCP Quân Đội (MB)</option>
                            <option value="Ngân hàng TMCP Ngoại thương Việt Nam (Vietcombank)">Ngân hàng TMCP Ngoại thương Việt Nam (Vietcombank)</option>
                            <option value="Ngân hàng TMCP Công thương Việt Nam (VietinBank)">Ngân hàng TMCP Công thương Việt Nam (VietinBank)</option>
                            <option value="Ngân hàng TMCP Kỹ thương Việt Nam (Techcombank)">Ngân hàng TMCP Kỹ thương Việt Nam (Techcombank)</option>
                            <option value="Ngân hàng TMCP Sài Gòn Thương Tín (Sacombank)">Ngân hàng TMCP Sài Gòn Thương Tín (Sacombank)</option>
                            <option value="Ngân hàng TMCP Việt Nam Thịnh Vượng (VPBank)">Ngân hàng TMCP Việt Nam Thịnh Vượng (VPBank)</option>
                            <option value="Ngân hàng TMCP Xuất Nhập khẩu Việt Nam (Eximbank)">Ngân hàng TMCP Xuất Nhập khẩu Việt Nam (Eximbank)</option>
                            <option value="Ngân hàng TMCP Tiên Phong (TPBank)">Ngân hàng TMCP Tiên Phong (TPBank)</option>
                            <option value="Ngân hàng TMCP Quốc Tế (VIB)">Ngân hàng TMCP Quốc Tế (VIB)</option>
                            <option value="Ngân hàng TMCP Phương Đông (OCB)">Ngân hàng TMCP Phương Đông (OCB)</option>
                            <option value="Ngân hàng TMCP Sài Gòn - Hà Nội (SHB)">Ngân hàng TMCP Sài Gòn - Hà Nội (SHB)</option>
                            <option value="Ngân hàng TMCP Đông Nam Á (SeABank)">Ngân hàng TMCP Đông Nam Á (SeABank)</option>
                            <option value="Ngân hàng TMCP Phát triển TP. Hồ Chí Minh (HDBank)">Ngân hàng TMCP Phát triển TP. Hồ Chí Minh (HDBank)</option>
                            <option value="Ngân hàng TMCP An Bình (ABBank)">Ngân hàng TMCP An Bình (ABBank)</option>
                            <option value="Ngân hàng TMCP Nam Á (NamABank)">Ngân hàng TMCP Nam Á (NamABank)</option>
                            <option value="Ngân hàng TMCP Bưu Điện Liên Việt (LienVietPostBank)">Ngân hàng TMCP Bưu Điện Liên Việt (LienVietPostBank)</option>
                            <option value="Ngân hàng TMCP Việt Á (VietABank)">Ngân hàng TMCP Việt Á (VietABank)</option>
                            <option value="Ngân hàng TMCP Sài Gòn (SCB)">Ngân hàng TMCP Sài Gòn (SCB)</option>
                            <option value="Ngân hàng TMCP Đại Chúng Việt Nam (PVcomBank)">Ngân hàng TMCP Đại Chúng Việt Nam (PVcomBank)</option>
                            <option value="Ngân hàng TMCP Kiên Long (KienLongBank)">Ngân hàng TMCP Kiên Long (KienLongBank)</option>
                            <option value="Ngân hàng TMCP Việt Nam Thương Tín (VietBank)">Ngân hàng TMCP Việt Nam Thương Tín (VietBank)</option>
                            <option value="Ngân hàng TMCP Bản Việt (VietCapitalBank)">Ngân hàng TMCP Bản Việt (VietCapitalBank)</option>
                            <option value="Ngân hàng Nông nghiệp và Phát triển Nông thôn Việt Nam (Agribank)">Ngân hàng Nông nghiệp và Phát triển Nông thôn Việt Nam (Agribank)</option>
                            <option value="Ngân hàng TMCP Xăng dầu Petrolimex (PG Bank)">Ngân hàng TMCP Xăng dầu Petrolimex (PG Bank)</option>
                            <option value="Ngân hàng Chính sách Xã hội (VBSP)">Ngân hàng Chính sách Xã hội (VBSP)</option>
                            <option value="Ngân hàng Hợp tác xã Việt Nam (Co-opBank)">Ngân hàng Hợp tác xã Việt Nam (Co-opBank)</option>
                            <option value="Ngân hàng TNHH MTV HSBC Việt Nam">Ngân hàng TNHH MTV HSBC Việt Nam</option>
                            <option value="Ngân hàng TNHH MTV Standard Chartered Việt Nam">Ngân hàng TNHH MTV Standard Chartered Việt Nam</option>
                            <option value="Ngân hàng TNHH MTV Shinhan Việt Nam">Ngân hàng TNHH MTV Shinhan Việt Nam</option>
                            <option value="Ngân hàng TNHH MTV ANZ Việt Nam">Ngân hàng TNHH MTV ANZ Việt Nam</option>
                            <option value="Ngân hàng TNHH MTV UOB Việt Nam">Ngân hàng TNHH MTV UOB Việt Nam</option>
                            <option value="Ngân hàng TNHH MTV Woori Việt Nam">Ngân hàng TNHH MTV Woori Việt Nam</option>
                            <option value="Ngân hàng TNHH MTV Hong Leong Việt Nam">Ngân hàng TNHH MTV Hong Leong Việt Nam</option>
                            <option value="Ngân hàng Đầu tư và Phát triển Campuchia (BIDC)">Ngân hàng Đầu tư và Phát triển Campuchia (BIDC)</option>
                            <option value="Ngân hàng Public Bank Vietnam">Ngân hàng Public Bank Vietnam</option>
                            <option value="Ngân hàng khác">Ngân hàng khác</option>
                        </select>
                    </div>
                    <div class="form-group" id="otherBankGroup" style="display: none;">
                        <label for="otherBank">Tên ngân hàng khác</label>
                        <input type="text" class="form-control" id="otherBank" placeholder="Nhập tên ngân hàng">
                    </div>
                    <div class="form-group">
                        <label for="soTaiKhoan">Số tài khoản</label>
                        <input type="text" class="form-control account-info" id="soTaiKhoan" required placeholder="Nhập số tài khoản" maxlength="16" pattern="[0-9]*" inputmode="numeric">
                    </div>
                    <div class="form-group">
                        <label for="tenChuTaiKhoan">Tên chủ tài khoản</label>
                        <input type="text" class="form-control account-info" id="tenChuTaiKhoan" required placeholder="Nhập tên chủ tài khoản">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Rút tiền</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function () {

            // Biểu đồ doanh thu
            var ctx = document.getElementById('revenueChart').getContext('2d');

            // Tìm giá trị lớn nhất trong dữ liệu doanh thu
            var doanhThuData = @Html.Raw(Json.Encode(ViewBag.DoanhThu));
            var maxDoanhThu = Math.max(...doanhThuData.filter(value => !isNaN(value)));

            var revenueChart = new Chart(ctx, {
                type: 'bar', // Thay đổi thành biểu đồ cột
                data: {
                    labels: @Html.Raw(Json.Encode(ViewBag.ThangDoanhThu)),
                    datasets: [
                        {
                            type: 'bar',
                            label: 'Doanh thu',
                            data: doanhThuData,
                            backgroundColor: 'rgba(54, 162, 235, 0.7)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 0,
                            borderRadius: 4,
                            barPercentage: 0.6,
                            categoryPercentage: 0.7
                        },
                        {
                            type: 'line',
                            label: 'Xu hướng',
                            data: doanhThuData,
                            borderColor: 'rgba(40, 200, 130, 1)',
                            backgroundColor: 'transparent',
                            borderWidth: 2,
                            pointBackgroundColor: 'white',
                            pointBorderColor: 'rgba(40, 200, 130, 1)',
                            pointBorderWidth: 2,
                            pointRadius: 4,
                            tension: 0.3,
                            fill: false
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: true,
                            position: 'bottom',
                            labels: {
                                boxWidth: 12,
                                padding: 15
                            }
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.parsed.y);
                                    }
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)',
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 6,
                                callback: function(value) {
                                    if (value >= 1000000) {
                                        return (value / 1000000).toLocaleString() + 'M';
                                    }
                                    if (value >= 1000) {
                                        return (value / 1000).toLocaleString() + 'K';
                                    }
                                    return value;
                                },
                                padding: 10
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            },
                            ticks: {
                                padding: 10
                            }
                        }
                    }
                }
            });

            // Xử lý định dạng số tiền trong input
            $('.currency-input').each(function() {
                setupCurrencyInput(this);
            });

            // Tự động áp dụng cho #soTien và #soTienRut nếu có
            setupCurrencyInput('#soTien');
            setupCurrencyInput('#soTienRut');
            //9/4/2025
            // Lắng nghe sự kiện thay đổi của dropdown ngân hàng
            $('#tenNganHang').change(function () {
                if ($(this).val() === "Ngân hàng khác") {
                    $('#otherBankGroup').show();
                    $('#otherBank').attr('required', true);
                } else {
                    $('#otherBankGroup').hide();
                    $('#otherBank').attr('required', false);
                }
            });

            //9/4/2025
            // Xử lý form rút tiền
            $('#withdrawModal form').on('submit', function(e) {
                // Xóa dấu phẩy khỏi giá trị trước khi submit
                $('#soTienRut').val(function(i, val) {
                    return val.replace(/,/g, '');
                });

                var soTienRut = parseFloat($('#soTienRut').val());
                var soDuVi = parseFloat('@Model.SoDuVi');

                if (isNaN(soTienRut) || soTienRut <= 0) {
                    e.preventDefault();
                    alert('Vui lòng nhập số tiền hợp lệ!');
                    return false;
                }

                if (soTienRut > soDuVi) {
                    e.preventDefault();
                    alert('Số tiền rút không được vượt quá số dư ví!');
                    return false;
                }


                //9/4/2025
                // Xác định tên ngân hàng (từ dropdown hoặc input "ngân hàng khác")
                var bankName = $('#tenNganHang').val();
                if (bankName === "Ngân hàng khác") {
                    bankName = $('#otherBank').val();
                    if (!bankName.trim()) {
                        e.preventDefault();
                        alert('Vui lòng nhập tên ngân hàng khác!');
                        return false;
                    }
                }

                var accountNumber = $('#soTaiKhoan').val();
                var accountHolder = $('#tenChuTaiKhoan').val();

                // Ghép thông tin vào input ẩn
                var fullInfo = bankName + ' - ' + accountNumber + ' - ' + accountHolder;
                $('#fullAccountInfo').val(fullInfo);
                //9/4/2025
                return true;
            });


            // Xử lý khi click vào nút Xem tất cả
            $("#xemTatCaBtn").click(function () {
                $("#giaoDichTable").hide();
                $("#tatCaGiaoDich").show();
                $("#xemTatCaBtn").hide();
                $("#anBotBtn").show();
                console.log("Đã bấm nút Xem tất cả");
            });

            // Xử lý khi click vào nút Thu gọn
            $("#anBotBtn").click(function () {
                $("#tatCaGiaoDich").hide();
                $("#giaoDichTable").show();
                $("#anBotBtn").hide();
                $("#xemTatCaBtn").show();
                console.log("Đã bấm nút Thu gọn");
            });

            // Xử lý khi bấm nút nạp tiền
            $(".btn-nap-tien").click(function () {
                $("#depositModal").modal("show");
            });

            // Cập nhật phần xử lý form submit
            $('#depositModal form').on('submit', function (e) {
                // Xóa dấu phẩy trước khi submit
                $('#soTien').val(function (i, val) {
                    return val.replace(/,/g, '');
                });

                var soTien = parseFloat($('#soTien').val());
                var minAmount = 10000;

                if (isNaN(soTien) || soTien < minAmount) {
                    e.preventDefault();
                    alert('Số tiền nạp phải ít nhất ' + minAmount.toLocaleString('vi-VN') + ' VNĐ!');
                    return false;
                }

                if (soTien > 100000000) {
                    if (!confirm('Bạn đang nạp một số tiền lớn: ' + soTien.toLocaleString('vi-VN') + ' VNĐ. Xác nhận tiếp tục?')) {
                        e.preventDefault();
                        return false;
                    }
                }

                return true;
            });

            // Đảm bảo modal được khởi tạo đúng
            $("#depositModal").on("shown.bs.modal", function () {
                $("#soTien").focus();
            });
        });

        // Function định dạng số tiền với dấu phẩy phân cách hàng nghìn
        function formatCurrency(value) {
            // Loại bỏ tất cả các ký tự không phải số
            value = value.replace(/\D/g, '');

            //// Kiểm tra giá trị tối thiểu
            //if (value && parseInt(value) < 10000) {
            //    value = '10000';
            //}

            // Định dạng số với dấu phẩy phân cách hàng nghìn
            if (value) {
                return new Intl.NumberFormat('en-US').format(parseInt(value));
            }
            return '';
        }

        // Function thiết lập xử lý input tiền tệ
        function setupCurrencyInput(inputSelector) {
            var input = $(inputSelector);
            if (input.length === 0) return;

            // Đảm bảo input là text, không phải number
            input.attr('type', 'text');

            // Xử lý sự kiện khi người dùng nhập
            input.on('input', function(e) {
                // Lưu vị trí con trỏ
                const start = this.selectionStart;
                const oldLength = this.value.length;

                // Định dạng giá trị
                this.value = formatCurrency(this.value);

                // Điều chỉnh vị trí con trỏ sau khi định dạng
                const newLength = this.value.length;
                const position = start + (newLength - oldLength);
                this.setSelectionRange(position, position);
            });

            // Xử lý khi form được submit để loại bỏ dấu phẩy
            var form = input.closest('form');
            if (form.length) {
                form.on('submit', function() {
                    input.val(function(i, val) {
                        // Lưu giá trị gốc vào một hidden field nếu cần
                        var numericValue = val.replace(/,/g, '');
                        if (!input.siblings('input[name="' + input.attr('name') + '_numeric"]').length) {
                            input.after('<input type="hidden" name="' + input.attr('name') + '_numeric" value="' + numericValue + '">');
                        } else {
                            input.siblings('input[name="' + input.attr('name') + '_numeric"]').val(numericValue);
                        }
                        return val; // Giữ nguyên giá trị hiển thị có dấu phẩy
                    });
                });
            }

            // Định dạng giá trị ban đầu nếu có
            if (input.val()) {
                input.val(formatCurrency(input.val()));
            }
        }
    </script>
}
