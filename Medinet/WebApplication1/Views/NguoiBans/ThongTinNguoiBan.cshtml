@model WebApplication1.Controllers.NguoiBanViewModel
@{
    ViewBag.Title = Model.NguoiBan.TenCuaHang;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <!-- Phần thông tin người bán bên trái -->

        <div class="col-lg-3">
            <!-- Thông tin cửa hàng -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Thông tin cửa hàng</h5>
                </div>
                <div class="card-body text-center">
                    @if (!string.IsNullOrEmpty(Model.NguoiDung.AnhDaiDien))
                    {
                        <img src="@Url.Content(Model.NguoiDung.AnhDaiDien)" alt="@Model.NguoiBan.TenCuaHang"
                             class="rounded-circle mb-3 shadow" style="width: 120px; height: 120px; object-fit: cover;">
                    }
                    else
                    {
                        <img src="~/Content/Images/default-avatar.png" alt="@Model.NguoiBan.TenCuaHang"
                             class="rounded-circle mb-3 shadow" style="width: 120px; height: 120px; object-fit: cover;">
                    }

                    <h4 class="card-title">@Model.NguoiBan.TenCuaHang</h4>
                    <p class="text-muted">@Model.NguoiDung.TenNguoiDung</p>

                    <div class="text-left mt-3">
                        <p class="mb-2">
                            <i class="fas fa-map-marker-alt mr-2 text-primary"></i>
                            @(string.IsNullOrEmpty(Model.NguoiBan.DiaChiCuaHang) ? "Chưa cập nhật địa chỉ" : Model.NguoiBan.DiaChiCuaHang)
                        </p>
                        <p class="mb-2">
                            <i class="fas fa-phone mr-2 text-primary"></i>
                            @(string.IsNullOrEmpty(Model.NguoiBan.SoDienThoaiCuaHang) ? "Chưa cập nhật số điện thoại" : Model.NguoiBan.SoDienThoaiCuaHang)
                        </p>
                        <p class="mb-2">
                            <i class="fas fa-envelope mr-2 text-primary"></i>
                            @Model.NguoiDung.Email
                        </p>
                        <p class="mb-2">
                            <i class="fas fa-store mr-2 text-primary"></i>
                            Tham gia từ: @Model.NguoiBan.NgayTao.ToString("dd/MM/yyyy")
                        </p>
                    </div>
                </div>
            </div>

            <!-- Thông tin cửa hàng -->
            <div class="card mb-4 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Giới thiệu</h5>
                </div>
                <div class="card-body">
                    <p>@(string.IsNullOrEmpty(Model.NguoiBan.MoTaCuaHang) ? "Bán mọi loại thuốc" : Model.NguoiBan.MoTaCuaHang)</p>
                </div>
            </div>

            <!-- Chứng chỉ / giấy phép - với màu nền xanh lá và chữ/icon màu đen -->
            @if (Model.DanhSachChungChi != null && Model.DanhSachChungChi.Any())
            {
                <div class="card mb-4 shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0 ">Chứng chỉ / Giấy phép</h5>
                    </div>
                    <div class="card-body p-0" >
                        <div id="certificateCarousel" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators certificate-indicators">
                                @for (int i = 0; i < Model.DanhSachChungChi.Count; i++)
                                {
                                    <li data-target="#certificateCarousel" data-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
                                }
                            </ol>
                            <div class="carousel-inner">
                                @for (int i = 0; i < Model.DanhSachChungChi.Count; i++)
                                {
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <img src="@Url.Content(Model.DanhSachChungChi[i].DuongDanAnh)" class="d-block w-100"
                                             alt="Chứng chỉ @(i+1)" style="padding: 15px; height: 220px; object-fit: contain;">
                                    </div>
                                }
                            </div>
                            @if (Model.DanhSachChungChi.Count > 1)
                            {
                                <a class="carousel-control-prev certificate-control" href="#certificateCarousel" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon certificate-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next certificate-control" href="#certificateCarousel" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon certificate-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }

        </div>

        <!-- Phần danh sách sản phẩm bên phải -->
        <div class="col-lg-9">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Sản phẩm của cửa hàng (@ViewBag.TotalItems)</h5>
                        <div class="sort-tabs">
                            <a href="@Url.Action("ThongTinNguoiBan", "NguoiBans", new { id = Model.NguoiBan.MaNguoiBan, sort = "newest" })"
                               class="sort-tab @(ViewBag.CurrentSort == "newest" || string.IsNullOrEmpty(ViewBag.CurrentSort) ? "active" : "")">
                                Mới nhất
                            </a>
                            <a href="@Url.Action("ThongTinNguoiBan", "NguoiBans", new { id = Model.NguoiBan.MaNguoiBan, sort = "priceAsc" })"
                               class="sort-tab @(ViewBag.CurrentSort == "priceAsc" ? "active" : "")">
                                Giá tăng dần
                            </a>
                            <a href="@Url.Action("ThongTinNguoiBan", "NguoiBans", new { id = Model.NguoiBan.MaNguoiBan, sort = "priceDesc" })"
                               class="sort-tab @(ViewBag.CurrentSort == "priceDesc" ? "active" : "")">
                                Giá giảm dần
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    @if (Model.DanhSachSanPham != null && Model.DanhSachSanPham.Any())
                    {
                        <div class="row">
                            @foreach (var sanPham in Model.DanhSachSanPham)
                            {
                                <div class="col-lg-4 col-md-6 mb-4">
                                    <div class="card h-100 product-card shadow-sm">
                                        <a href="@Url.Action("ChiTiet", "Home", new { id = sanPham.MaSanPham })">
                                            @if (sanPham.AnhSanPhams != null && sanPham.AnhSanPhams.Any())
                                            {
                                                <img class="card-img-top" src="@Url.Content(sanPham.AnhSanPhams.FirstOrDefault().DuongDanAnh)"
                                                     alt="@sanPham.TenSanPham" style="height: 180px; object-fit: contain; padding: 10px;">
                                            }
                                            else
                                            {
                                                <img class="card-img-top" src="~/Content/Images/no-image.jpeg"
                                                     alt="@sanPham.TenSanPham" style="height: 180px; object-fit: contain; padding: 10px;">
                                            }
                                        </a>
                                        <div class="card-body">
                                            <a href="@Url.Action("ChiTiet", "Home", new { id = sanPham.MaSanPham })">
                                                <h6 class="card-title" style="height: 48px; overflow: hidden; display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical;">
                                                    @sanPham.TenSanPham
                                                </h6>
                                            </a>
                                            <p class="card-text text-danger font-weight-bold">@String.Format("{0:N0}", sanPham.GiaSanPham) đ</p>

                                            <!-- Tag danh mục sản phẩm -->
                                            <a href="@Url.Action("SanPham", "Home", new { maDanhMuc = sanPham.MaDanhMuc })">
                                                <span class="badge badge-light text-muted">
                                                    <i class="fas fa-tag mr-1"></i> @sanPham.DanhMucSanPham.TenDanhMuc
                                                </span>
                                            </a>
                                        </div>
                                        <div class="card-footer bg-white">
                                            <div class="d-flex">
                                                <button class="btn btn-primary flex-grow-1 mr-2" onclick="addToCart(@sanPham.MaSanPham)">
                                                    <i class="fas fa-shopping-cart"></i> Thêm vào giỏ
                                                </button>
                                                <button class="btn btn-success flex-grow-1" onclick="buyNow(@sanPham.MaSanPham)">
                                                    <i class="fas fa-bolt"></i> Mua ngay
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Phân trang -->
                        if (ViewBag.TotalPages > 1)
                        {
                            <div class="row mt-4">
                                <div class="col-12">
                                    <nav aria-label="Page navigation">
                                        <ul class="pagination justify-content-center">
                                            @if (ViewBag.CurrentPage > 1)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="@Url.Action("ThongTinNguoiBan", "NguoiBans", new { id = Model.NguoiBan.MaNguoiBan, page = ViewBag.CurrentPage - 1, sort = ViewBag.CurrentSort })" aria-label="Previous">
                                                        <span aria-hidden="true">&laquo;</span>
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="page-item disabled">
                                                    <a class="page-link" href="#" aria-label="Previous">
                                                        <span aria-hidden="true">&laquo;</span>
                                                    </a>
                                                </li>
                                            }

                                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                            {
                                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                    <a class="page-link" href="@Url.Action("ThongTinNguoiBan", "NguoiBans", new { id = Model.NguoiBan.MaNguoiBan, page = i, sort = ViewBag.CurrentSort })">@i</a>
                                                </li>
                                            }

                                            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                            {
                                                <li class="page-item">
                                                    <a class="page-link" href="@Url.Action("ThongTinNguoiBan", "NguoiBans", new { id = Model.NguoiBan.MaNguoiBan, page = ViewBag.CurrentPage + 1, sort = ViewBag.CurrentSort })" aria-label="Next">
                                                        <span aria-hidden="true">&raquo;</span>
                                                    </a>
                                                </li>
                                            }
                                            else
                                            {
                                                <li class="page-item disabled">
                                                    <a class="page-link" href="#" aria-label="Next">
                                                        <span aria-hidden="true">&raquo;</span>
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </nav>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-shopping-basket fa-4x text-muted mb-3"></i>
                            <h5>Cửa hàng chưa có sản phẩm nào</h5>
                            <p class="text-muted">Hãy quay lại sau nhé!</p>
                            <a href="@Url.Action("Index", "Home")" class="btn btn-primary mt-2">
                                <i class="fas fa-home"></i> Về trang chủ
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript để thêm sản phẩm vào giỏ hàng và mua ngay -->
<script>
// Hàm chuyển hướng đến trang đăng nhập với thông tin hành động
function redirectToLogin(action, productId, quantity) {
    var returnUrl = window.location.pathname + window.location.search;

    // Tạo URL cho việc chuyển hướng đến trang đăng nhập với thông tin về hành động
    var loginUrl = '@Url.Action("DangNhap", "DangNhap")' +
                  '?returnUrl=' + encodeURIComponent(returnUrl) +
                  '&action=' + encodeURIComponent(action) +
                  '&productId=' + encodeURIComponent(productId);

    // Thêm số lượng nếu được cung cấp
    if (quantity) {
        loginUrl += '&quantity=' + encodeURIComponent(quantity);
    }

    window.location.href = loginUrl;
}

// Hàm thêm vào giỏ hàng có kiểm tra đăng nhập
function addToCart(maSanPham) {
    console.log("Hàm addToCart được gọi với maSanPham =", maSanPham);

    // Kiểm tra xem người dùng đã đăng nhập chưa
    var isAuthenticated = @(Request.IsAuthenticated.ToString().ToLower());
    console.log("isAuthenticated =", isAuthenticated);

    if (!isAuthenticated) {
        console.log("Người dùng chưa đăng nhập, chuyển hướng đến trang đăng nhập");
        // Chuyển hướng đến trang đăng nhập với thông tin về việc thêm vào giỏ
        redirectToLogin('addToCart', maSanPham, 1);
        return;
    }

    // Nếu đã đăng nhập, tiếp tục với hành động thêm vào giỏ
    $.ajax({
        url: '@Url.Action("ThemVaoGio", "Home")',
        type: 'POST',
        data: { maSanPham: maSanPham, soLuong: 1 },
        success: function (result) {
            if (result.success) {
                //toastr.success('Đã thêm sản phẩm vào giỏ hàng');
                console.log("Thêm vào giỏ thành công, gọi API lấy số lượng giỏ hàng");

                // Luôn gọi API để lấy số lượng giỏ hàng hiện tại
                $.ajax({
                    url: '@Url.Action("GetCartCount", "Home")',
                    type: 'GET',
                    success: function(countData) {
                        console.log("API GetCartCount trả về:", countData);
                        var cartBadge = $(".cart-badge");

                        if (cartBadge.length > 0) {
                            console.log("Tìm thấy cart-badge, cập nhật số lượng:", countData.count);
                            cartBadge.text(countData.count);
                            cartBadge.show();
                        } else {
                            console.log("Không tìm thấy cart-badge, tạo mới");
                            $(".cart-container").append('<span class="cart-badge" style="position: absolute; top: -8px; right: -8px; background-color: #dc3545; color: white; border-radius: 50%; min-width: 18px; height: 18px; font-size: 11px; font-weight: bold; display: flex; align-items: center; justify-content: center; padding: 2px;">' + countData.count + '</span>');
                        }
                    },
                    error: function(error) {
                        console.error("Lỗi khi gọi API GetCartCount:", error);
                    }
                });
            } else {
                toastr.error(result.message);
                console.error("Lỗi khi thêm vào giỏ:", result.message);
            }
        },
        error: function (error) {
            toastr.error('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng');
            console.error("Lỗi Ajax khi thêm vào giỏ:", error);
        }
    });
}

// Hàm mua ngay có kiểm tra đăng nhập
function buyNow(maSanPham) {
    console.log("Hàm buyNow được gọi với maSanPham =", maSanPham);

    // Kiểm tra xem người dùng đã đăng nhập chưa
    var isAuthenticated = @(Request.IsAuthenticated.ToString().ToLower());
    console.log("isAuthenticated =", isAuthenticated);

    if (!isAuthenticated) {
        console.log("Người dùng chưa đăng nhập, chuyển hướng đến trang đăng nhập");
        // Chuyển hướng đến trang đăng nhập với thông tin về việc mua ngay
        redirectToLogin('buyNow', maSanPham, 1);
        return;
    }

    // Nếu đã đăng nhập, tiếp tục với hành động mua ngay
    // Gọi AJAX để thêm sản phẩm vào giỏ hàng tạm thời và chuyển đến trang thanh toán
    $.ajax({
        url: '@Url.Action("MuaNgay", "ThanhToan")',
        type: 'POST',
        data: {
            maSanPham: maSanPham,
            soLuong: 1
        },
        success: function(result) {
            if (result.success) {
                console.log("Mua ngay thành công, chuyển hướng đến:", result.redirectUrl);
                // Chuyển hướng đến trang thanh toán
                window.location.href = result.redirectUrl;
            } else {
                // Hiển thị thông báo lỗi
                toastr.error(result.message);
                console.error("Lỗi khi mua ngay:", result.message);
            }
        },
        error: function(error) {
            toastr.error('Đã xảy ra lỗi khi xử lý. Vui lòng thử lại sau.');
            console.error("Lỗi Ajax khi mua ngay:", error);
        }
    });
}

// Thêm đoạn code debug để kiểm tra jQuery và các phần tử giỏ hàng khi trang tải
$(document).ready(function() {
    console.log("Document ready được chạy");
    console.log("jQuery version:", $.fn.jquery);
    console.log("Tìm thấy .cart-badge:", $(".cart-badge").length);
    console.log("Tìm thấy .cart-container:", $(".cart-container").length);

    // Kiểm tra xem toastr đã được định nghĩa chưa
    if (typeof toastr === 'undefined') {
        console.warn("Toastr chưa được tải! Sử dụng alert thay thế.");
        // Định nghĩa toastr giả
        window.toastr = {
            success: function(msg) { alert(msg); },
            error: function(msg) { alert(msg); }
        };
    }
});
</script>

<!-- CSS bổ sung -->
<style>
    /* Loại bỏ tất cả gạch chân */
    a, a:hover, a:focus, a:active {
        text-decoration: none !important;
    }

    /* Hiệu ứng cho sản phẩm */
    .product-card {
        transition: all 0.3s ease;
        border-radius: 8px;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }

    .card-title {
        color: #333;
    }

    .product-card:hover .card-title {
        color: #007bff;
    }

    /* Phân trang */
    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
        color: #fff !important;
    }

    .pagination .page-link {
        color: #007bff;
    }

    .pagination .page-link:hover {
        color: #0056b3;
    }

    /* Nút mua hàng */
    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

    .btn-success:hover {
        background-color: #218838;
        border-color: #1e7e34;
    }

    /* Định dạng card footer */
    .card-footer {
        padding: 0.75rem;
    }


    /* Tạo lại icon next/prev màu đen */
    .certificate-control .certificate-icon {
        filter: invert(1); /* Đảo ngược màu (trắng thành đen) */
    }

    /* Đảm bảo icon và chữ trong carousel đều đen */
    #certificateCarousel .carousel-caption {
        color: #000;
    }

    /* CSS cho các tab sắp xếp */
    .sort-tabs {
        background-color: rgba(255, 255, 255, 0.9);
        border-radius: 30px;
        display: inline-flex;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        padding: 3px;
    }

    .sort-tab {
        padding: 8px 16px;
        color: #555;
        font-size: 14px;
        text-decoration: none;
        transition: all 0.3s;
        border-radius: 25px;
        margin: 0 2px;
    }

        .sort-tab:hover {
            background-color: #f0f0f0;
            color: #333;
        }

        .sort-tab.active {
            background-color: #FF6B6B; /* Màu hồng đẹp mắt */
            color: white !important;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(255, 107, 107, 0.4);
        }

    /* Hoặc bạn có thể chọn một trong những màu sau:
   - #4ECDC4 (xanh ngọc)
   - #FF8C42 (cam)
   - #6A0572 (tím)
   - #45B69C (xanh lá)
   - #FF6B6B (hồng)
*/
</style>