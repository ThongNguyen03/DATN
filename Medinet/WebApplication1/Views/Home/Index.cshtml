@model WebApplication1.Controllers.HomeViewModel
@{
    ViewBag.Title = "Trang chủ";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    /* Thiết lập màu chữ trắng cho các nút phân trang active */
    .pagination .page-item.active .page-link {
        color: #fff !important;
        background-color: #007bff;
        border-color: #007bff;
    }

    /* Đảm bảo màu chữ đen cho các nút phân trang không active */
    .pagination .page-item:not(.active) .page-link {
        color: #000;
    }

        /* Hiệu ứng hover cho các nút phân trang không active */
        .pagination .page-item:not(.active) .page-link:hover {
            background-color: #f8f9fa;
            color: #007bff;
        }

    /* Thiết lập màu đen và bỏ gạch chân cho tất cả các liên kết sản phẩm */
    .card-title, .card-body a, .row a, .col-lg-3 a {
        color: #000 !important;
        text-decoration: none !important;
    }

    /* Hiệu ứng khi hover vào liên kết sản phẩm */
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        /* Thêm hiệu ứng màu chữ khi hover */
        .card:hover .card-title {
            color: #007bff !important;
            transition: color 0.3s ease;
        }

    /* Hiệu ứng khi hover cho các liên kết phân trang */
    .pagination .page-link:hover {
        background-color: #f8f9fa;
        color: #007bff;
    }

    .col-lg-3 .card-title, .col-md-4 .card-title, .col-sm-6 .card-title {
        color: #000;
        text-decoration: none;
    }

    .col-lg-3 .card:hover, .col-md-4 .card:hover, .col-sm-6 .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    .row .card-title {
        color: #000;
        text-decoration: none;
    }

    .row .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

    /* CSS để giới hạn tên sản phẩm thành 2 dòng */
    .card-title {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        height: 48px; /* Chiều cao cho 2 dòng, điều chỉnh nếu cần */
        margin-bottom: 10px;

        line-height: 1.5;
    }

    /* Đảm bảo chiều cao thẻ card đồng nhất */
    .card {
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .card-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    /* Đẩy giá xuống dưới và thẻ tiêu đề ở trên */
    .card-text {
        margin-top: auto;
    }

    /* Nếu tên sản phẩm ngắn hơn 2 dòng, vẫn giữ khoảng trống */
    .card-title {
        min-height: 64px;
    }




    /* CSS cho nút thêm vào giỏ */
    .btn-them-vao-gio {
        transition: all 0.3s ease;
        width: 100%;
        font-weight: bold;
    }

        .btn-them-vao-gio:hover {
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        /* Hiệu ứng khi nhấn nút */
        .btn-them-vao-gio:active {
            transform: translateY(1px);
        }

    /* Đảm bảo card-footer có đủ padding */
    .card-footer {
        padding: 0.75rem;
    }

    /* Tạo không gian giữa thông tin sản phẩm và nút */
    .card-body {
        padding-bottom: 0.5rem;
    }

    /* Cho phép toasts hiển thị đúng vị trí */
    .toast {
        position: absolute;
        bottom: 20px;
        right: 20px;
    }
</style>
<div class="container mt-4">
    <!-- Phần hiển thị danh mục sản phẩm -->
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="text-uppercase font-weight-bold">DANH MỤC SẢN PHẨM</h2>
        </div>
    </div>

    <div class="row mb-5">
        @foreach (var danhMuc in Model.DanhMucSanPhams)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card h-100 text-center">
                    <a href="@Url.Action("SanPham", "Home", new { maDanhMuc = danhMuc.MaDanhMuc })">
                        @if (!string.IsNullOrEmpty(danhMuc.AnhDanhMucSanPham))
                        {
                            <img class="card-img-top" src="@Url.Content(danhMuc.AnhDanhMucSanPham)" alt="@danhMuc.TenDanhMuc" style="height: 150px; object-fit: cover;">
                        }
                        else
                        {
                            <img class="card-img-top" src="~/Content/images/no-image.jpeg" alt="@danhMuc.TenDanhMuc" style="height: 150px; object-fit: cover;">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@danhMuc.TenDanhMuc</h5>
                        </div>
                    </a>
                </div>
            </div>
        }
    </div>

    <!-- Phần hiển thị sản phẩm được đề xuất -->
    <div class="row mb-4">
        <div class="col-10">
            <h2 class="text-uppercase font-weight-bold">SẢN PHẨM ĐƯỢC ĐỀ XUẤT</h2>
        </div>
        @*<div class="col-2 text-right">
                <a href="@Url.Action("Index", "SanPham")" class="btn btn-link">Xem thêm</a>
            </div>*@
    </div>

    <div class="row">
        @foreach (var sanPham in Model.SanPhamDeXuats)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card h-100">
                    <a href="@Url.Action("ChiTiet", "Home", new { id = sanPham.MaSanPham })">
                        @if (sanPham.AnhSanPhams != null && sanPham.AnhSanPhams.Any())
                        {
                            <img class="card-img-top" src="@Url.Content(sanPham.AnhSanPhams.FirstOrDefault().DuongDanAnh)" alt="@sanPham.TenSanPham" style="height: 200px; object-fit: contain;">
                        }
                        else
                        {
                            <img class="card-img-top" src="~/Content/images/no-image.jpeg" alt="@sanPham.TenSanPham" style="height: 200px; object-fit: contain;">
                        }
                        <div class="card-body">
                            <h5 class="card-title">@sanPham.TenSanPham</h5>
                            <p class="card-text font-weight-bold text-danger">@String.Format("{0:N0}", sanPham.GiaSanPham) đ</p>
                        </div>
                    </a>

                    <!-- Thêm nút Thêm vào giỏ hàng -->
                    <div class="card-footer bg-white border-top-0 text-center">
                        <button class="btn btn-primary btn-sm btn-them-vao-gio" data-id="@sanPham.MaSanPham">
                            <i class="fas fa-shopping-cart mr-1"></i> Thêm vào giỏ
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Phân trang -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="row">
            <div class="col-12">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        @if (ViewBag.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", "Home", new { page = ViewBag.CurrentPage - 1 })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Home", new { page = i })">@i</a>
                            </li>
                        }

                        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", "Home", new { page = ViewBag.CurrentPage + 1 })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }

</div>

<!-- JavaScript xử lý sự kiện thêm vào giỏ hàng -->
@section Scripts {
    <script>
        //23/4/2025
        $(document).ready(function () {
        // Xử lý sự kiện khi nhấn nút "Thêm vào giỏ"
        $('.btn-them-vao-gio').click(function (e) {
            e.preventDefault();

            var maSanPham = $(this).data('id');
            var soLuong = 1; // Mặc định thêm 1 sản phẩm
            var button = $(this);

            // Kiểm tra đăng nhập
            var isAuthenticated = @(Request.IsAuthenticated.ToString().ToLower());

            if (!isAuthenticated) {
                // Chuyển hướng đến trang đăng nhập
                redirectToLogin('addToCart', maSanPham, soLuong);
                return;
            }

            // Disable nút để tránh click nhiều lần
            button.prop('disabled', true);

            $.ajax({
                url: '@Url.Action("ThemVaoGio", "Home")',
                type: 'POST',
                data: { maSanPham: maSanPham, soLuong: soLuong },
                success: function (result) {
                    if (result.success) {
                        // Cập nhật số lượng sản phẩm trong giỏ hàng
                        updateCartBadge(result.cartItemCount);

                        // Hiển thị thông báo thành công
                        alert(result.message);
                    } else {
                        // Hiển thị thông báo lỗi
                        alert(result.message);
                    }

                    // Enable lại nút sau khi xử lý xong
                    button.prop('disabled', false);
                },
                error: function () {
                    alert('Đã xảy ra lỗi khi thêm sản phẩm vào giỏ hàng');

                    // Enable lại nút sau khi xử lý xong
                    button.prop('disabled', false);
                }
            });
        });

        // Hàm cập nhật số lượng giỏ hàng trên header
        function updateCartBadge(count) {
            if (count > 0) {
                // Nếu đã có badge, cập nhật số lượng
                if ($('.cart-badge').length) {
                    $('.cart-badge').text(count);
                } else {
                    // Nếu chưa có badge, thêm mới
                    $('.cart-container .icon-button').after('<span class="cart-badge">' + count + '</span>');
                }
            } else {
                // Nếu số lượng = 0, ẩn badge
                $('.cart-badge').remove();
            }
        }

        // Hàm chuyển hướng đến trang đăng nhập với thông tin về hành động
        function redirectToLogin(action, productId, quantity) {
            var returnUrl = window.location.pathname + window.location.search;

            // Tạo URL cho việc chuyển hướng đến trang đăng nhập với thông tin về hành động
            var loginUrl = '@Url.Action("DangNhap", "DangNhap")' +
                          '?returnUrl=' + encodeURIComponent(returnUrl) +
                          '&action=' + encodeURIComponent(action) +
                          '&productId=' + encodeURIComponent(productId);

            // Thêm số lượng nếu được cung cấp
            if (quantity) {
                loginUrl += '&quantity=' + encodeURIComponent(quantity);
            }

            window.location.href = loginUrl;
        }
        });
        //23/4/2025
    </script>
}